{"version":3,"file":"bundle.js","sources":["../../node_modules/codejar/codejar.js","../../node_modules/codejar/linenumbers.js","../../node_modules/prismjs/prism.js","../../src/main.js","../../src/default.js","../../../index.js"],"sourcesContent":["const globalWindow = window;\nexport function CodeJar(editor, highlight, opt = {}) {\n    const options = Object.assign({ tab: '\\t', indentOn: /[({\\[]$/, moveToNewLine: /^[)}\\]]/, spellcheck: false, catchTab: true, preserveIdent: true, addClosing: true, history: true, window: globalWindow }, opt);\n    const window = options.window;\n    const document = window.document;\n    let listeners = [];\n    let history = [];\n    let at = -1;\n    let focus = false;\n    let callback;\n    let prev; // code content prior keydown event\n    editor.setAttribute('contenteditable', 'plaintext-only');\n    editor.setAttribute('spellcheck', options.spellcheck ? 'true' : 'false');\n    editor.style.outline = 'none';\n    editor.style.overflowWrap = 'break-word';\n    editor.style.overflowY = 'auto';\n    editor.style.whiteSpace = 'pre-wrap';\n    let isLegacy = false; // true if plaintext-only is not supported\n    highlight(editor);\n    if (editor.contentEditable !== 'plaintext-only')\n        isLegacy = true;\n    if (isLegacy)\n        editor.setAttribute('contenteditable', 'true');\n    const debounceHighlight = debounce(() => {\n        const pos = save();\n        highlight(editor, pos);\n        restore(pos);\n    }, 30);\n    let recording = false;\n    const shouldRecord = (event) => {\n        return !isUndo(event) && !isRedo(event)\n            && event.key !== 'Meta'\n            && event.key !== 'Control'\n            && event.key !== 'Alt'\n            && !event.key.startsWith('Arrow');\n    };\n    const debounceRecordHistory = debounce((event) => {\n        if (shouldRecord(event)) {\n            recordHistory();\n            recording = false;\n        }\n    }, 300);\n    const on = (type, fn) => {\n        listeners.push([type, fn]);\n        editor.addEventListener(type, fn);\n    };\n    on('keydown', event => {\n        if (event.defaultPrevented)\n            return;\n        prev = toString();\n        if (options.preserveIdent)\n            handleNewLine(event);\n        else\n            legacyNewLineFix(event);\n        if (options.catchTab)\n            handleTabCharacters(event);\n        if (options.addClosing)\n            handleSelfClosingCharacters(event);\n        if (options.history) {\n            handleUndoRedo(event);\n            if (shouldRecord(event) && !recording) {\n                recordHistory();\n                recording = true;\n            }\n        }\n        if (isLegacy)\n            restore(save());\n    });\n    on('keyup', event => {\n        if (event.defaultPrevented)\n            return;\n        if (event.isComposing)\n            return;\n        if (prev !== toString())\n            debounceHighlight();\n        debounceRecordHistory(event);\n        if (callback)\n            callback(toString());\n    });\n    on('focus', _event => {\n        focus = true;\n    });\n    on('blur', _event => {\n        focus = false;\n    });\n    on('paste', event => {\n        recordHistory();\n        handlePaste(event);\n        recordHistory();\n        if (callback)\n            callback(toString());\n    });\n    function save() {\n        const s = getSelection();\n        const pos = { start: 0, end: 0, dir: undefined };\n        let { anchorNode, anchorOffset, focusNode, focusOffset } = s;\n        if (!anchorNode || !focusNode)\n            throw 'error1';\n        // Selection anchor and focus are expected to be text nodes,\n        // so normalize them.\n        if (anchorNode.nodeType === Node.ELEMENT_NODE) {\n            const node = document.createTextNode('');\n            anchorNode.insertBefore(node, anchorNode.childNodes[anchorOffset]);\n            anchorNode = node;\n            anchorOffset = 0;\n        }\n        if (focusNode.nodeType === Node.ELEMENT_NODE) {\n            const node = document.createTextNode('');\n            focusNode.insertBefore(node, focusNode.childNodes[focusOffset]);\n            focusNode = node;\n            focusOffset = 0;\n        }\n        visit(editor, el => {\n            if (el === anchorNode && el === focusNode) {\n                pos.start += anchorOffset;\n                pos.end += focusOffset;\n                pos.dir = anchorOffset <= focusOffset ? '->' : '<-';\n                return 'stop';\n            }\n            if (el === anchorNode) {\n                pos.start += anchorOffset;\n                if (!pos.dir) {\n                    pos.dir = '->';\n                }\n                else {\n                    return 'stop';\n                }\n            }\n            else if (el === focusNode) {\n                pos.end += focusOffset;\n                if (!pos.dir) {\n                    pos.dir = '<-';\n                }\n                else {\n                    return 'stop';\n                }\n            }\n            if (el.nodeType === Node.TEXT_NODE) {\n                if (pos.dir != '->')\n                    pos.start += el.nodeValue.length;\n                if (pos.dir != '<-')\n                    pos.end += el.nodeValue.length;\n            }\n        });\n        // collapse empty text nodes\n        editor.normalize();\n        return pos;\n    }\n    function restore(pos) {\n        const s = getSelection();\n        let startNode, startOffset = 0;\n        let endNode, endOffset = 0;\n        if (!pos.dir)\n            pos.dir = '->';\n        if (pos.start < 0)\n            pos.start = 0;\n        if (pos.end < 0)\n            pos.end = 0;\n        // Flip start and end if the direction reversed\n        if (pos.dir == '<-') {\n            const { start, end } = pos;\n            pos.start = end;\n            pos.end = start;\n        }\n        let current = 0;\n        visit(editor, el => {\n            if (el.nodeType !== Node.TEXT_NODE)\n                return;\n            const len = (el.nodeValue || '').length;\n            if (current + len > pos.start) {\n                if (!startNode) {\n                    startNode = el;\n                    startOffset = pos.start - current;\n                }\n                if (current + len > pos.end) {\n                    endNode = el;\n                    endOffset = pos.end - current;\n                    return 'stop';\n                }\n            }\n            current += len;\n        });\n        if (!startNode)\n            startNode = editor, startOffset = editor.childNodes.length;\n        if (!endNode)\n            endNode = editor, endOffset = editor.childNodes.length;\n        // Flip back the selection\n        if (pos.dir == '<-') {\n            [startNode, startOffset, endNode, endOffset] = [endNode, endOffset, startNode, startOffset];\n        }\n        s.setBaseAndExtent(startNode, startOffset, endNode, endOffset);\n    }\n    function beforeCursor() {\n        const s = getSelection();\n        const r0 = s.getRangeAt(0);\n        const r = document.createRange();\n        r.selectNodeContents(editor);\n        r.setEnd(r0.startContainer, r0.startOffset);\n        return r.toString();\n    }\n    function afterCursor() {\n        const s = getSelection();\n        const r0 = s.getRangeAt(0);\n        const r = document.createRange();\n        r.selectNodeContents(editor);\n        r.setStart(r0.endContainer, r0.endOffset);\n        return r.toString();\n    }\n    function handleNewLine(event) {\n        if (event.key === 'Enter') {\n            const before = beforeCursor();\n            const after = afterCursor();\n            let [padding] = findPadding(before);\n            let newLinePadding = padding;\n            // If last symbol is \"{\" ident new line\n            if (options.indentOn.test(before)) {\n                newLinePadding += options.tab;\n            }\n            // Preserve padding\n            if (newLinePadding.length > 0) {\n                preventDefault(event);\n                event.stopPropagation();\n                insert('\\n' + newLinePadding);\n            }\n            else {\n                legacyNewLineFix(event);\n            }\n            // Place adjacent \"}\" on next line\n            if (newLinePadding !== padding && options.moveToNewLine.test(after)) {\n                const pos = save();\n                insert('\\n' + padding);\n                restore(pos);\n            }\n        }\n    }\n    function legacyNewLineFix(event) {\n        // Firefox does not support plaintext-only mode\n        // and puts <div><br></div> on Enter. Let's help.\n        if (isLegacy && event.key === 'Enter') {\n            preventDefault(event);\n            event.stopPropagation();\n            if (afterCursor() == '') {\n                insert('\\n ');\n                const pos = save();\n                pos.start = --pos.end;\n                restore(pos);\n            }\n            else {\n                insert('\\n');\n            }\n        }\n    }\n    function handleSelfClosingCharacters(event) {\n        const open = `([{'\"`;\n        const close = `)]}'\"`;\n        const codeAfter = afterCursor();\n        const codeBefore = beforeCursor();\n        const escapeCharacter = codeBefore.substr(codeBefore.length - 1) === '\\\\';\n        const charAfter = codeAfter.substr(0, 1);\n        if (close.includes(event.key) && !escapeCharacter && charAfter === event.key) {\n            // We already have closing char next to cursor.\n            // Move one char to right.\n            const pos = save();\n            preventDefault(event);\n            pos.start = ++pos.end;\n            restore(pos);\n        }\n        else if (open.includes(event.key)\n            && !escapeCharacter\n            && (`\"'`.includes(event.key) || ['', ' ', '\\n'].includes(charAfter))) {\n            preventDefault(event);\n            const pos = save();\n            const wrapText = pos.start == pos.end ? '' : getSelection().toString();\n            const text = event.key + wrapText + close[open.indexOf(event.key)];\n            insert(text);\n            pos.start++;\n            pos.end++;\n            restore(pos);\n        }\n    }\n    function handleTabCharacters(event) {\n        if (event.key === 'Tab') {\n            preventDefault(event);\n            if (event.shiftKey) {\n                const before = beforeCursor();\n                let [padding, start,] = findPadding(before);\n                if (padding.length > 0) {\n                    const pos = save();\n                    // Remove full length tab or just remaining padding\n                    const len = Math.min(options.tab.length, padding.length);\n                    restore({ start, end: start + len });\n                    document.execCommand('delete');\n                    pos.start -= len;\n                    pos.end -= len;\n                    restore(pos);\n                }\n            }\n            else {\n                insert(options.tab);\n            }\n        }\n    }\n    function handleUndoRedo(event) {\n        if (isUndo(event)) {\n            preventDefault(event);\n            at--;\n            const record = history[at];\n            if (record) {\n                editor.innerHTML = record.html;\n                restore(record.pos);\n            }\n            if (at < 0)\n                at = 0;\n        }\n        if (isRedo(event)) {\n            preventDefault(event);\n            at++;\n            const record = history[at];\n            if (record) {\n                editor.innerHTML = record.html;\n                restore(record.pos);\n            }\n            if (at >= history.length)\n                at--;\n        }\n    }\n    function recordHistory() {\n        if (!focus)\n            return;\n        const html = editor.innerHTML;\n        const pos = save();\n        const lastRecord = history[at];\n        if (lastRecord) {\n            if (lastRecord.html === html\n                && lastRecord.pos.start === pos.start\n                && lastRecord.pos.end === pos.end)\n                return;\n        }\n        at++;\n        history[at] = { html, pos };\n        history.splice(at + 1);\n        const maxHistory = 300;\n        if (at > maxHistory) {\n            at = maxHistory;\n            history.splice(0, 1);\n        }\n    }\n    function handlePaste(event) {\n        preventDefault(event);\n        const text = (event.originalEvent || event)\n            .clipboardData\n            .getData('text/plain')\n            .replace(/\\r/g, '');\n        const pos = save();\n        insert(text);\n        highlight(editor);\n        restore({\n            start: Math.min(pos.start, pos.end) + text.length,\n            end: Math.min(pos.start, pos.end) + text.length,\n            dir: '<-',\n        });\n    }\n    function visit(editor, visitor) {\n        const queue = [];\n        if (editor.firstChild)\n            queue.push(editor.firstChild);\n        let el = queue.pop();\n        while (el) {\n            if (visitor(el) === 'stop')\n                break;\n            if (el.nextSibling)\n                queue.push(el.nextSibling);\n            if (el.firstChild)\n                queue.push(el.firstChild);\n            el = queue.pop();\n        }\n    }\n    function isCtrl(event) {\n        return event.metaKey || event.ctrlKey;\n    }\n    function isUndo(event) {\n        return isCtrl(event) && !event.shiftKey && event.code === 'KeyZ';\n    }\n    function isRedo(event) {\n        return isCtrl(event) && event.shiftKey && event.code === 'KeyZ';\n    }\n    function insert(text) {\n        text = text\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#039;');\n        document.execCommand('insertHTML', false, text);\n    }\n    function debounce(cb, wait) {\n        let timeout = 0;\n        return (...args) => {\n            clearTimeout(timeout);\n            timeout = window.setTimeout(() => cb(...args), wait);\n        };\n    }\n    function findPadding(text) {\n        // Find beginning of previous line.\n        let i = text.length - 1;\n        while (i >= 0 && text[i] !== '\\n')\n            i--;\n        i++;\n        // Find padding of the line.\n        let j = i;\n        while (j < text.length && /[ \\t]/.test(text[j]))\n            j++;\n        return [text.substring(i, j) || '', i, j];\n    }\n    function toString() {\n        return editor.textContent || '';\n    }\n    function preventDefault(event) {\n        event.preventDefault();\n    }\n    function getSelection() {\n        var _a;\n        if (((_a = editor.parentNode) === null || _a === void 0 ? void 0 : _a.nodeType) == Node.DOCUMENT_FRAGMENT_NODE) {\n            return editor.parentNode.getSelection();\n        }\n        return window.getSelection();\n    }\n    return {\n        updateOptions(newOptions) {\n            Object.assign(options, newOptions);\n        },\n        updateCode(code) {\n            editor.textContent = code;\n            highlight(editor);\n        },\n        onUpdate(cb) {\n            callback = cb;\n        },\n        toString,\n        save,\n        restore,\n        recordHistory,\n        destroy() {\n            for (let [type, fn] of listeners) {\n                editor.removeEventListener(type, fn);\n            }\n        },\n    };\n}\n","export function withLineNumbers(highlight, options = {}) {\n    const opts = Object.assign({ class: \"codejar-linenumbers\", wrapClass: \"codejar-wrap\", width: \"35px\", backgroundColor: \"rgba(128, 128, 128, 0.15)\", color: \"\" }, options);\n    let lineNumbers;\n    return function (editor) {\n        highlight(editor);\n        if (!lineNumbers) {\n            lineNumbers = init(editor, opts);\n            editor.addEventListener(\"scroll\", () => lineNumbers.style.top = `-${editor.scrollTop}px`);\n        }\n        const code = editor.textContent || \"\";\n        const linesCount = code.replace(/\\n+$/, \"\\n\").split(\"\\n\").length + 1;\n        let text = \"\";\n        for (let i = 1; i < linesCount; i++) {\n            text += `${i}\\n`;\n        }\n        lineNumbers.innerText = text;\n    };\n}\nfunction init(editor, opts) {\n    const css = getComputedStyle(editor);\n    const wrap = document.createElement(\"div\");\n    wrap.className = opts.wrapClass;\n    wrap.style.position = \"relative\";\n    const gutter = document.createElement(\"div\");\n    gutter.className = opts.class;\n    wrap.appendChild(gutter);\n    // Add own styles\n    gutter.style.position = \"absolute\";\n    gutter.style.top = \"0px\";\n    gutter.style.left = \"0px\";\n    gutter.style.bottom = \"0px\";\n    gutter.style.width = opts.width;\n    gutter.style.overflow = \"hidden\";\n    gutter.style.backgroundColor = opts.backgroundColor;\n    gutter.style.color = opts.color || css.color;\n    gutter.style.setProperty(\"mix-blend-mode\", \"difference\");\n    // Copy editor styles\n    gutter.style.fontFamily = css.fontFamily;\n    gutter.style.fontSize = css.fontSize;\n    gutter.style.lineHeight = css.lineHeight;\n    gutter.style.paddingTop = css.paddingTop;\n    gutter.style.paddingLeft = css.paddingLeft;\n    gutter.style.borderTopLeftRadius = css.borderTopLeftRadius;\n    gutter.style.borderBottomLeftRadius = css.borderBottomLeftRadius;\n    // Add line numbers\n    const lineNumbers = document.createElement(\"div\");\n    lineNumbers.style.position = \"relative\";\n    lineNumbers.style.top = \"0px\";\n    gutter.appendChild(lineNumbers);\n    // Tweak editor styles\n    editor.style.paddingLeft = `calc(${opts.width} + ${gutter.style.paddingLeft})`;\n    editor.style.whiteSpace = \"pre\";\n    // Swap editor with a wrap\n    editor.parentNode.insertBefore(wrap, editor);\n    wrap.appendChild(editor);\n    return lineNumbers;\n}\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\t/**\n\t * Loads the given file.\n\t *\n\t * @param {string} src The URL or path of the source file to load.\n\t * @param {(result: string) => void} success\n\t * @param {(reason: string) => void} error\n\t */\n\tfunction loadFile(src, success, error) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('GET', src, true);\n\t\txhr.onreadystatechange = function () {\n\t\t\tif (xhr.readyState == 4) {\n\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\tsuccess(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\terror(FAILURE_MESSAGE(xhr.status, xhr.statusText));\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror(FAILURE_EMPTY_MESSAGE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\txhr.send(null);\n\t}\n\n\t/**\n\t * Parses the given range.\n\t *\n\t * This returns a range with inclusive ends.\n\t *\n\t * @param {string | null | undefined} range\n\t * @returns {[number, number | undefined] | undefined}\n\t */\n\tfunction parseRange(range) {\n\t\tvar m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || '');\n\t\tif (m) {\n\t\t\tvar start = Number(m[1]);\n\t\t\tvar comma = m[2];\n\t\t\tvar end = m[3];\n\n\t\t\tif (!comma) {\n\t\t\t\treturn [start, start];\n\t\t\t}\n\t\t\tif (!end) {\n\t\t\t\treturn [start, undefined];\n\t\t\t}\n\t\t\treturn [start, Number(end)];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tPrism.util.setLanguage(code, language);\n\t\t\tPrism.util.setLanguage(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tloadFile(\n\t\t\t\tsrc,\n\t\t\t\tfunction (text) {\n\t\t\t\t\t// mark as loaded\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t// handle data-range\n\t\t\t\t\tvar range = parseRange(pre.getAttribute('data-range'));\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tvar lines = text.split(/\\r\\n?|\\n/g);\n\n\t\t\t\t\t\t// the range is one-based and inclusive on both ends\n\t\t\t\t\t\tvar start = range[0];\n\t\t\t\t\t\tvar end = range[1] == null ? lines.length : range[1];\n\n\t\t\t\t\t\tif (start < 0) { start += lines.length; }\n\t\t\t\t\t\tstart = Math.max(0, Math.min(start - 1, lines.length));\n\t\t\t\t\t\tif (end < 0) { end += lines.length; }\n\t\t\t\t\t\tend = Math.max(0, Math.min(end, lines.length));\n\n\t\t\t\t\t\ttext = lines.slice(start, end).join('\\n');\n\n\t\t\t\t\t\t// add data-start for line numbers\n\t\t\t\t\t\tif (!pre.hasAttribute('data-start')) {\n\t\t\t\t\t\t\tpre.setAttribute('data-start', String(start + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// highlight code\n\t\t\t\t\tcode.textContent = text;\n\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t},\n\t\t\t\tfunction (error) {\n\t\t\t\t\t// mark as failed\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\tcode.textContent = error;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; (element = elements[i++]);) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t};\n\n}());\n","import {CodeJar} from 'codejar';\nimport {withLineNumbers} from 'codejar/linenumbers';\nimport Prism from 'prismjs';\nimport htmlToDominatorString from \"../../index\";\nimport {svgDefault, htmlDefault, fullDefault, textNodeDefault} from \"./default\";\n\nconst DEBUG = true;\n\nconst opts = {\n    attrKind: \"multiline\",\n    emptyAttrIsBooleanProp: false\n};\n\nfunction setAttrKind(kind) {\n    document.querySelector(`input[type='radio'][name=attr_kind][value=${kind}]`).checked = true;\n}\n\nfunction getAttrKind() {\n    return document.querySelector(\"input[type='radio'][name=attr_kind]:checked\").value;\n}\n\nfunction onAttrKindChange(f) {\n    document.querySelectorAll(\"input[type='radio'][name=attr_kind]\").forEach(input => {\n        input.onchange = () => f(getAttrKind());\n    });\n}\n\nsetAttrKind(opts.attrKind);\nonAttrKindChange(kind => {\n    console.log(kind);\n    render();\n});\n\n\nconst inputEditor = document.querySelector('#input');\nconst inputJar = new CodeJar(\n\tinputEditor, \n\twithLineNumbers(Prism.highlightElement), \n\t{tab: '\\t'}\n);\n\ninputEditor.style.resize = \"none\"\n\ninputJar.updateCode(DEBUG ? fullDefault : \"\");\n\ninputJar.onUpdate(code => {\n\t//just in case jar's toString is updated after this\n\trequestAnimationFrame(render);\n});\n\nconst outputEditor = document.querySelector('#output');\nconst outputJar = new CodeJar(\n\toutputEditor, \n\twithLineNumbers(Prism.highlightElement), \n\t{tab: '\\t'}\n);\n\noutputEditor.style.resize = \"none\"\n\ndocument.querySelector(\"#copy\").onclick = () => {\n    copyTextToClipboard(outputJar.toString());\n}\n\nrender();\n\nfunction render() {\n\tconst html = inputJar.toString();\n        const opts = {\n            attrKind: getAttrKind()\n\t};\n\n\tconst dominator_string = htmlToDominatorString(html, opts);\n\toutputJar.updateCode(dominator_string);\n}\n\n// https://stackoverflow.com/a/30810322/784519\nfunction copyTextToClipboard(text) {\n    if (!navigator.clipboard) {\n        var textArea = document.createElement(\"textarea\");\n        textArea.value = text;\n\n        // Avoid scrolling to bottom\n        textArea.style.top = \"0\";\n        textArea.style.left = \"0\";\n        textArea.style.position = \"fixed\";\n\n        document.body.appendChild(textArea);\n        textArea.focus();\n        textArea.select();\n\n        try {\n            if(document.execCommand('copy')) {\n                console.log('copied to clipboard');\n            } else {\n                console.error('Fallback copy to clipboard failed');\n            }\n        } catch (err) {\n            console.error('Fallback copy to clipboard failed: ', err);\n        }\n\n        document.body.removeChild(textArea);\n    } else {\n        navigator.clipboard.writeText(text).then(function() {\n            console.log('copied to clipboard');\n        }, function(err) {\n            console.error('could not copy to clipboard: ', err);\n        });\n    }\n}\n","export const textNodeDefault = \n`<p id=\"container\">\nOr\n<a id=\"inner\">\n  start your 14-day free trial\n</a>\n</p>`;\nexport const htmlDefault = \n`<header class=\"fancy\">\n  <div class=\"flex mb-4\">\n    <div class=\"cell\">\n        One of three columns\n    </div>\n    <div class=\"cell bg-indigo-100\">\n        <div class=\"green text-4xl\">Two of three columns</div>\n    </div>\n    <div class=\"cell\">\n        Profile\n    </div>\n  </div>\n</header>`;\n\nexport const svgDefault = \n`<svg class=\"h-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n\t<path fill-rule=\"evenodd\" d=\"M10 0C4.477 0 0 4.484 0 10.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0110 4.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.203 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.942.359.31.678.921.678 1.856 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0020 10.017C20 4.484 15.522 0 10 0z\" clip-rule=\"evenodd\"/>\n</svg>`;\n\nexport const fullDefault = \n`<div class=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n<div class=\"max-w-md w-full\">\n  <div>\n    <img class=\"mx-auto h-12 w-auto\" src=\"https://tailwindui.com/img/logos/workflow-mark-on-white.svg\" alt=\"Workflow\" />\n    <h2 class=\"mt-6 text-center text-3xl leading-9 font-extrabold text-gray-900\">\n      Sign in to your account\n    </h2>\n    <p class=\"mt-2 text-center text-sm leading-5 text-gray-600\">\n      Or\n      <a href=\"#\" class=\"font-medium text-indigo-600 hover:text-indigo-500 focus:outline-none focus:underline transition ease-in-out duration-150\">\n        start your 14-day free trial\n      </a>\n    </p>\n  </div>\n  <form class=\"mt-8\" action=\"#\" method=\"POST\">\n    <input type=\"hidden\" name=\"remember\" value=\"true\" />\n    <div class=\"rounded-md shadow-sm\">\n      <div>\n        <input aria-label=\"Email address\" name=\"email\" type=\"email\" required class=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:shadow-outline-blue focus:border-blue-300 focus:z-10 sm:text-sm sm:leading-5\" placeholder=\"Email address\" />\n      </div>\n      <div class=\"-mt-px\">\n        <input aria-label=\"Password\" name=\"password\" type=\"password\" required class=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:shadow-outline-blue focus:border-blue-300 focus:z-10 sm:text-sm sm:leading-5\" placeholder=\"Password\" />\n      </div>\n    </div>\n\n    <div class=\"mt-6 flex items-center justify-between\">\n      <div class=\"flex items-center\">\n        <input id=\"remember_me\" type=\"checkbox\" class=\"form-checkbox h-4 w-4 text-indigo-600 transition duration-150 ease-in-out\" checked />\n        <label for=\"remember_me\" class=\"ml-2 block text-sm leading-5 text-gray-900\">\n          Remember me\n        </label>\n      </div>\n\n      <div class=\"text-sm leading-5\">\n        <a href=\"#\" class=\"font-medium text-indigo-600 hover:text-indigo-500 focus:outline-none focus:underline transition ease-in-out duration-150\">\n          Forgot your password?\n        </a>\n      </div>\n    </div>\n\n    <div class=\"mt-6\">\n      <button type=\"submit\" class=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm leading-5 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-500 focus:outline-none focus:border-indigo-700 focus:shadow-outline-indigo active:bg-indigo-700 transition duration-150 ease-in-out\">\n        <span class=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n          <svg class=\"h-5 w-5 text-indigo-500 group-hover:text-indigo-400 transition ease-in-out duration-150\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n            <path fill-rule=\"evenodd\" d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\" clip-rule=\"evenodd\" />\n          </svg>\n        </span>\n        Sign in\n      </button>\n    </div>\n  </form>\n</div>\n</div>`;","module.exports = function htmlToDominatorString(html, opts) {\n\n    opts = opts || {};\n\n    const {attrKind, emptyAttrIsBooleanProp} = opts;\n\n    //white space collapsing is complicated. See: https://www.w3.org/TR/css-text-3/#white-space-processing\n    //therefore we wrap it in a custom element, then process it via its innerText\n    //the custom element behaves like a classless <span>\n    //while also protecting us from global <span> CSS, just in case\n\n    if(!customElements.get('html-to-dominator-string')) {\n        class CustomTextElement extends HTMLElement {\n            constructor() {\n                super();\n                this.attachShadow({mode: 'closed'});\n\n            }\n        }\n\n        customElements.define('html-to-dominator-string', CustomTextElement, {extends: \"span\"});\n    }\n\n\n    const [element, container] = htmlToElement(html);\n\n    const str = addNodes(\n        element, \n        {\n            nodeDepth: 0,\n            str: \"\",\n            withComma: false,\n            parentTag: \"html\"\n        }\n    );\n\n    container.remove();\n\n    return str;\n\n    function addNodes(element, state) {\n        let {nodeDepth, str, withComma} = state;\n        if(element == null) {\n            return str;\n        }\n        const {tagName, attributes, nodeType} = element;\n\n        // childNodes includes all child nodes—including non-element nodes like text and comment nodes. \n        // To get a collection of only elements, use ParentNode.children instead.\n        // - https://developer.mozilla.org/en-US/docs/Web/API/Node/childNodes\n        const children = element.childNodes;\n\n\n        const parentTag = element.tagName === \"html\" || element.tagName === \"svg\"\n            ? element.tagName\n            : state.parentTag;\n\n\n        const writeLine = (lineDepth, text) => {\n            writePart(lineDepth, text + '\\n'); \n        }\n        const writePart = (lineDepth, text) => {\n            str += makeIndent(lineDepth) + text;\n        }\n\n        const writeTextNode = (nodeDepth, element) => {\n            //See note above, about white space collapsing\n            const textContent = element.textContent;\n\n            if(textContent.trim() !== \"\") {\n\n                //create the custom element\n                const textElement = document.createElement(\"html-to-dominator-string\");\n                //append the text content as a new child text node\n                textElement.appendChild(document.createTextNode(textContent));\n                //swap the current (text node) element with the custom element\n                element.replaceWith(textElement);\n                //get the innerText (since the custom element extends span, it'll be formatted properly)\n                const innerText = textElement.innerText;\n                //write it out\n                writeLine(nodeDepth, `.text(\"${innerText}\")`);\n            }\n\n            if(element.childNodes && element.childNodes.length) {\n                throw new Error(\"text nodes with children? very confusing!!\");\n            }\n        }\n\n        const writeMap = (map, attrOrProp) => {\n            const mapArr = Array.from(map.entries())\n            if(map.size === 1) {\n                const [name, value] = mapArr[0]\n                if(attrOrProp === \"attr\") {\n                    writeLine(nodeDepth + 1, `.attr(\"${name}\", \"${value}\")`);\n                } else {\n                    writeLine(nodeDepth + 1, `.prop(\"${name}\", ${value})`);\n                }\n            } else if(map.size) {\n                if(attrKind === \"oneline\") {\n                    let s = `.${attrOrProp}s!{`;\n                    mapArr.forEach((curr) => {\n                        const [name, value] = curr;\n                        if(attrOrProp === \"attr\") {\n                            s += ` \"${name}\": \"${value}\",`\n                        } else {\n                            s += ` \"${name}\": ${value},`\n                        }\n                    }, \"\");\n                    s += `}`\n                    writeLine(nodeDepth + 1, s)\n                } else {\n                    writeLine(nodeDepth + 1, `.${attrOrProp}s!{`)\n                    mapArr.forEach((curr) => {\n                        const [name, value] = curr;\n                        if(attrOrProp === \"attr\") {\n                            writeLine(nodeDepth + 2,`\"${name}\": \"${value}\",`)\n                        } else {\n                            writeLine(nodeDepth + 2,`\"${name}\": ${value},`)\n                        }\n                    }, \"\");\n                    writeLine(nodeDepth + 1, `}`)\n                }\n            }\n        }\n\n        // node types: https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\n        if(nodeType == 3) {\n            // this won't really happen here, unless top-level element is text\n            writeTextNode(nodeDepth, element);\n        } else if(nodeType == 1) {\n\n\n            writeLine(nodeDepth, `${parentTag}!(\"${tagName.toLowerCase()}\", {`);\n\n            const attrsToAdd = new Map();\n            const propsToAdd = new Map();\n            for(let i = 0; i < attributes.length; i++) {\n                const {name, value} = attributes[i];\n                if(name.toLowerCase() === \"class\") {\n                    const classNames = value.split(\" \");\n                    if(classNames.length) {\n                        if(classNames.length === 1) {\n                            writeLine(nodeDepth + 1, `.class(\"${classNames[0]}\")`);\n                        } else {\n                            const classString = classNames.map(x => `\"${x}\"`).join(\",\");\n                            writeLine(nodeDepth + 1, `.class([${classString}])`);\n                        }\n                    }\n                } else {\n                    if(value === \"\" && emptyAttrIsBooleanProp) {\n                        propsToAdd.set(name, true);\n                    } else {\n                        attrsToAdd.set(name, value);\n                    }\n                }\n            }\n\n            writeMap(attrsToAdd, \"attr\");\n            writeMap(propsToAdd, \"prop\");\n\n            const textChildren = [];\n            const realChildren = [];\n            for(let i = 0; i < children.length; i++) {\n                const element = children[i];\n                if(element.nodeType == 3) {\n                    textChildren.push(element);\n                } else {\n                    realChildren.push(element);\n                }\n            }\n\n            textChildren.forEach(child => writeTextNode(nodeDepth + 1, child));\n\n            if(realChildren.length) {            \n                if(realChildren.length === 1) {\n                    writeLine(nodeDepth + 1, `.child(`);\n\n                    str = addNodes(\n                        realChildren[0], \n                        {\n                            nodeDepth: nodeDepth + 2, \n                            str, \n                            parentTag,\n                        }\n                    );\n                    writeLine(nodeDepth + 1, `)`);\n\n                } else {\n                    writeLine(nodeDepth + 1, `.children([`);\n\n                    for(let i = 0; i < realChildren.length; i++) {\n                        str = addNodes(\n                            realChildren[i], \n                            {\n                                nodeDepth: nodeDepth + 2, \n                                str, \n                                withComma: true,\n                                parentTag,\n                            });\n                    }\n\n                    writeLine(nodeDepth + 1, `])`);\n                }\n            }\n\n            if(withComma) {\n                writeLine(nodeDepth, `}),`);\n            } else {\n                writeLine(nodeDepth, `})`);\n            }\n        }\n\n        return str;\n    }\n   \n    function makeIndent(depth) {\n        let indent = \"\";\n\n        for(let i = 0; i < depth; i++) {\n            indent += \"\\t\";\n        }\n\n        return indent;\n    }\n    \n    function htmlToElement(html) {\n        const hiddenContainer = document.createElement(\"div\");\n        const offScreenContainer = document.createElement(\"div\");\n\n        hiddenContainer.style.position = \"relative\";\n        hiddenContainer.style.overflow = \"hidden\";\n\n        offScreenContainer.innerHTML = html.trim();\n        offScreenContainer.normalize();\n        offScreenContainer.style.position = \"absolute\";\n        offScreenContainer.style.left = \"calc(100vw + 1em)\";\n        offScreenContainer.style.top= \"0\";\n        \n        hiddenContainer.appendChild(offScreenContainer);\n        document.body.appendChild(hiddenContainer);\n\n        return [offScreenContainer.firstChild, hiddenContainer];\n    }\n\n}\n\n"],"names":["globalWindow","window","CodeJar","editor","highlight","opt","options","Object","assign","tab","indentOn","moveToNewLine","spellcheck","catchTab","preserveIdent","addClosing","history","document","callback","prev","listeners","at","focus","setAttribute","style","outline","overflowWrap","overflowY","whiteSpace","isLegacy","contentEditable","debounceHighlight","debounce","pos","save","restore","recording","shouldRecord","event","isUndo","isRedo","key","startsWith","debounceRecordHistory","recordHistory","on","type","fn","push","addEventListener","s","getSelection","start","end","dir","undefined","anchorNode","anchorOffset","focusNode","focusOffset","nodeType","Node","ELEMENT_NODE","node","createTextNode","insertBefore","childNodes","visit","el","TEXT_NODE","nodeValue","length","normalize","startNode","endNode","startOffset","endOffset","current","len","setBaseAndExtent","beforeCursor","r0","getRangeAt","r","createRange","selectNodeContents","setEnd","startContainer","toString","afterCursor","setStart","endContainer","legacyNewLineFix","preventDefault","stopPropagation","insert","html","innerHTML","lastRecord","splice","visitor","queue","firstChild","pop","nextSibling","isCtrl","metaKey","ctrlKey","shiftKey","code","text","replace","execCommand","cb","wait","timeout","args","clearTimeout","setTimeout","findPadding","i","j","test","substring","textContent","_a","parentNode","DOCUMENT_FRAGMENT_NODE","defaultPrevented","before","after","padding","newLinePadding","handleNewLine","Math","min","handleTabCharacters","open","close","codeAfter","codeBefore","escapeCharacter","substr","charAfter","includes","wrapText","indexOf","handleSelfClosingCharacters","record","handleUndoRedo","isComposing","_event","originalEvent","clipboardData","getData","handlePaste","updateOptions","newOptions","updateCode","onUpdate","destroy","removeEventListener","withLineNumbers","opts","class","wrapClass","width","backgroundColor","color","lineNumbers","css","getComputedStyle","wrap","createElement","className","position","gutter","appendChild","top","left","bottom","overflow","setProperty","fontFamily","fontSize","lineHeight","paddingTop","paddingLeft","borderTopLeftRadius","borderBottomLeftRadius","init","scrollTop","linesCount","split","innerText","Prism","_self","lang","uniqueId","plainTextGrammar","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","content","alias","Array","isArray","map","o","prototype","call","slice","objId","obj","defineProperty","value","clone","deepClone","visited","id","hasOwnProperty","forEach","v","getLanguage","element","m","exec","toLowerCase","parentElement","setLanguage","language","RegExp","classList","add","currentScript","Error","err","src","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","contains","languages","plain","plaintext","txt","extend","redef","inside","root","grammar","ret","token","newToken","old","DFS","this","property","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","selector","hooks","run","elements","apply","querySelectorAll","highlightElement","parent","nodeName","insertHighlightedCode","highlightedCode","hasAttribute","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","tokenize","rest","tokenList","LinkedList","addAfter","head","matchGrammar","list","array","next","tail","toArray","all","name","callbacks","matchedStr","matchPattern","pattern","lookbehind","lastIndex","match","lookbehindLength","index","startPos","rematch","patterns","cause","patternObj","greedy","global","flags","source","currentNode","reach","str","removeCount","from","to","p","k","matchStr","removeFrom","removeRange","nestedRematch","newNode","count","e","tag","classes","attributes","aliases","join","message","parse","script","highlightAutomaticallyCallback","readyState","defer","requestAnimationFrame","WorkerGlobalScope","self","module","exports","markup","comment","prolog","doctype","string","punctuation","cdata","namespace","entity","tagName","includedCdataInside","def","attrName","mathml","svg","xml","ssml","atom","rss","atrule","rule","keyword","url","function","important","addInlined","addAttribute","clike","boolean","number","operator","javascript","regex","parameter","constant","hashbang","interpolation","js","Element","matches","msMatchesSelector","webkitMatchesSelector","EXTENSIONS","py","rb","ps1","psm1","sh","bat","h","tex","STATUS_ATTR","STATUS_LOADING","STATUS_LOADED","SELECTOR","pre","getAttribute","extension","autoloader","loadLanguages","success","error","xhr","XMLHttpRequest","onreadystatechange","status","responseText","statusText","send","loadFile","range","Number","comma","parseRange","lines","max","String","fileHighlight","logged","console","warn","arguments","getAttrKind","querySelector","kind","f","checked","log","render","input","onchange","inputEditor","inputJar","resize","outputEditor","outputJar","dominator_string","attrKind","emptyAttrIsBooleanProp","customElements","get","CustomTextElement","HTMLElement","constructor","super","attachShadow","mode","define","extends","hiddenContainer","offScreenContainer","trim","body","htmlToElement","addNodes","state","nodeDepth","withComma","children","parentTag","writeLine","lineDepth","writePart","depth","indent","makeIndent","writeTextNode","textElement","replaceWith","writeMap","attrOrProp","mapArr","entries","size","curr","attrsToAdd","Map","propsToAdd","classNames","classString","x","set","textChildren","realChildren","child","remove","htmlToDominatorString","onclick","navigator","clipboard","writeText","then","textArea","select","removeChild","copyTextToClipboard"],"mappings":"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"}